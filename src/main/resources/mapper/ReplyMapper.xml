<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.learncommunity.dao.ReplyMapper" >
  <resultMap id="BaseResultMap" type="org.learncommunity.entity.Reply" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="topicid" property="topicid" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="root" property="root" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="replyBase" type="org.learncommunity.entity.Reply">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="topicid" property="topicid" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="root" property="root" jdbcType="INTEGER" />
    <association property="user" javaType="org.learncommunity.entity.User" resultMap="UserRs"></association>
  </resultMap>
  <resultMap id="UserRs" type="org.learncommunity.entity.User">
    <id column="u_id" property="id" jdbcType="INTEGER"/>
    <result column="u_name" property="name" jdbcType="VARCHAR"/>
    <result column="u_photourl" property="photourl" jdbcType="VARCHAR"/>
  </resultMap>

  <sql id="Base_Column_List" >
    id, topicid, userid, time, content, root
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from reply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    SELECT
    <include refid="Base_Column_List"/>
    from reply
    where userid = #{userid,jdbcType=INTEGER}
    LIMIT #{offset},#{limit}
  </select>
  <select id="selectLimitByTopicId" resultMap="replyBase" parameterType="java.lang.Integer">
    SELECT
    r.id, r.topicid, r.userid, r.time, r.content, r.root,
    u.id u_id, u.name u_name, u.photourl u_photourl
    from reply r LEFT JOIN
    user u
    ON
    r.userid = u.id
    where r.topicid = #{topicid,jdbcType=INTEGER}
    LIMIT #{offset},#{limit}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from reply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.learncommunity.entity.Reply" >
    insert into reply (id, topicid, userid, 
      time, content, root
      )
    values (#{id,jdbcType=INTEGER}, #{topicid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, 
      #{time,jdbcType=TIMESTAMP}, #{content,jdbcType=VARCHAR}, #{root,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.learncommunity.entity.Reply" >
    insert into reply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="topicid != null" >
        topicid,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="root != null" >
        root,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="topicid != null" >
        #{topicid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="root != null" >
        #{root,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.learncommunity.entity.Reply" >
    update reply
    <set >
      <if test="topicid != null" >
        topicid = #{topicid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="root != null" >
        root = #{root,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.learncommunity.entity.Reply" >
    update reply
    set topicid = #{topicid,jdbcType=INTEGER},
      userid = #{userid,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=VARCHAR},
      root = #{root,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>